DROP DATABASE IF EXISTS EXAM;
CREATE DATABASE EXAM;

USE EXAM;

CREATE TABLE  TB1(
	NUMBER CHAR(4) PRIMARY KEY,
    NAME VARCHAR(4) NOT NULL,
    AGE INT
    );
    
    SELECT *
    FROM TB1;
    
INSERT INTO TB1
VALUES('A101', '강신우' , 40), ('A102', '김기덕' , 28), ('A103', '김민호' , 20),
('A104', '문소리' , 40), ('A105', '박문수' , 40), ('A106', '김기덕' , 40);
    
ALTER TABLE TB1
ADD COLUMN GENDER CHAR(1) DEFAULT '남';

UPDATE TB1 
SET NAME = '김기범'
WHERE AGE = 28;

DELETE 
FROM TB1
WHERE NAME = '문소리';

-- SQL SELECT 1번문제

CREATE DATABASE EMP;
USE EMP;

CREATE TABLE EMP(
EMPNO INT PRIMARY KEY,
ENAME CHAR(6),
JOB CHAR(10),
MGR INT,
HIREDATE DATETIME,
SAL INT,
COMM INT,
DEPTNO SMALLINT
);

INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7369 , 'SMITH', 'CLERK', 7902, '1980-12-17 0:00', 800, NULL ,20);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7499, 'ALLEN', 'SALESMAN',7698,'1981-02-20 0:00',1600,300,30);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7521, 'WARD', 'SALESMAN',7698,'1981-02-22 0:00',1250,500,30);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7566, 'JONES', 'MANAGER',7839,'1981-04-02 0:00',2975,NULL,20);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7654, 'MARTIN', 'SALESMAN',7698,'1981-09-28 0:00',1250,1400,30);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7698, 'BLAKE', 'MANAGER',7839,'1981-05-01 0:00',2850,NULL,30);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7782, 'CLARK', 'MANAGER',7839,'1981-06-09 0:00',2450,NULL,10);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7788, 'SCOTT', 'ANALYST',7566,'1982-12-09 0:00',3000,NULL,20);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7839, 'KING', 'PRESIDENT',NULL,'1981-11-17 0:00',5000,NULL,10);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7844, 'TURNER', 'SALESMAN',7698,'1981-09-08 0:00',1500,0,30);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7876, 'ADAMS', 'CLERK',7788,'1983-01-12 0:00',1100,NULL,20);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7900, 'JAMES', 'CLERK',7698,'1981-12-03 0:00',950,NULL,30);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7902, 'FORD', 'ANALYST',7566,'1981-12-03 0:00',3000,NULL,20);
INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) VALUES (7934, 'MILLER', 'CLERK',7782,'1982-01-23 0:00',1300,NULL,10);

SELECT *
FROM EMP;

-- 첫번째 SELECT문제 --

-- 1번 --
SELECT EMPNO, ENAME, SAL
FROM EMP
WHERE DEPTNO= 10;

-- 2번 --
SELECT ENAME, HIREDATE, DEPTNO
FROM EMP
WHERE EMPNO = 7369;

-- 3번 --
SELECT *
FROM EMP
WHERE ENAME = 'ALLEN';

-- 4번 --
SELECT ENAME, DEPTNO, SAL
FROM EMP
WHERE HIREDATE = '1983-01-12';


-- 5번 --
SELECT *
FROM EMP
WHERE JOB NOT IN ('MANAGER'); 


-- 6번 --
SELECT *
FROM EMP
WHERE ENAME > 'K';

-- 7번 --
SELECT ENAME, SAL, DEPTNO
FROM EMP
WHERE HIREDATE BETWEEN '1981-04-02' AND '1982-12-09';

-- 8번 --
SELECT *
FROM EMP
WHERE ENAME LIKE "%S%";

-- 9번 --
SELECT *
FROM EMP
WHERE ENAME LIKE "S%T";

-- 10번 -- 
SELECT *
FROM EMP
WHERE ENAME LIKE "_A%";

-- 11번 --
SELECT *
FROM EMP
ORDER BY SAL DESC;

-- 12번 --
SELECT EMPNO, ENAME, DEPTNO
FROM EMP
WHERE ENAME LIKE "K%" OR DEPTNO = 30;

-- 13번 --
SELECT *
FROM EMP
WHERE (SAL >= 1500 AND DEPTNO = 30) AND JOB = 'MANAGER';


-- 두번째 SELECT문제 --

-- 1번 --
SELECT *
FROM EMP
WHERE EMPNO BETWEEN 7654 AND 7782;

-- 2번 --
SELECT *
FROM EMP
WHERE ENAME BETWEEN 'B' AND 'J';

-- 3번 --
SELECT *
FROM EMP
WHERE YEAR(HIREDATE) != 1981 ;

-- 4번 --
SELECT *
FROM EMP
WHERE JOB IN('MANAGER', 'SALESMAN');

-- 5번 --
SELECT ENAME, EMPNO, DEPTNO
FROM EMP
WHERE DEPTNO NOT IN(20,30);

-- 6번 --
SELECT EMPNO, ENAME, HIREDATE, DEPTNO
FROM EMP
WHERE ENAME LIKE "S%";

-- 7번 --
SELECT *
FROM EMP
 WHERE YEAR(HIREDATE) = 1981;

-- 8번 --
SELECT *
FROM EMP
WHERE ENAME LIKE "%S%";

-- 9번 --
SELECT *
FROM EMP
WHERE ENAME LIKE "S%T";

-- 10번 --
SELECT *
FROM EMP
WHERE ENAME LIKE "_A%";

-- 11번 --
SELECT *
FROM EMP
WHERE COMM IS NULL;

-- 12번 --
SELECT *
FROM EMP
WHERE COMM IS NOT NULL;

-- 13번 -- 
SELECT ENAME, DEPTNO , SAL
FROM EMP
WHERE DEPTNO = 30 AND SAL >= 1500;

-- 14번 --
SELECT EMPNO, ENAME, DEPTNO
FROM EMP
WHERE ENAME LIKE "k%" OR DEPTNO = 30;

-- 15번 --
SELECT *
FROM EMP
WHERE (SAL>=1500 AND DEPTNO = 30) AND JOB = 'MANAGER';
 
 
 -- 세번째 SELECT문제 --
 CREATE DATABASE DEPT;
 USE DEPT;
 
 CREATE TABLE DEPT(
 DEPTNO INT,
 DNAME CHAR(15),
 LOC CHAR(15)
 );
 
 INSERT INTO DEPT VALUES (10, 'ACCOUNTING', 'NEW YORK'), (20, 'RESEARCH', 'DALLAS'), (30, 'SALES', 'CHICAGO'),
 (40, 'OPERATIONS', 'BOSTON'), (50, 'DEVELOPER', 'KOREA');
 
 SELECT *
 FROM DEPT;


-- 1번 --
SELECT A.ENAME, B.DNAME, A.SAL, A.JOB
FROM EMP A JOIN DEPT B
ON A.DEPTNO = B.DEPTNO
WHERE A.JOB = (SELECT JOB FROM EMP WHERE ENAME = 'ALLEN');

-- 2번 --
SELECT A.EMPNO, A.ENAME, A.HIREDATE, A.SAL
FROM EMP A JOIN DEPT B
ON B.DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME ='JONES');

-- 3번 --
SELECT A.EMPNO, A.ENAME, B.DNAME, A.HIREDATE, B.LOC, A.SAL
FROM EMP A JOIN DEPT B
ON A.DEPTNO = B.DEPTNO
WHERE A.SAL > (SELECT AVG(SAL) FROM EMP);

-- 4번 --
SELECT A.EMPNO, A.ENAME, B.DNAME, B.LOC, A.SAL
FROM EMP A JOIN DEPT B
ON A.DEPTNO = B.DEPTNO
WHERE B.DEPTNO = 10
ORDER BY SAL DESC;

-- 5번 --
SELECT EMPNO, ENAME, SAL
FROM EMP
WHERE SAL IN (SELECT SAL FROM EMP WHERE ENAME IN ('MARTIN', 'SCOTT'));

-- 6번 --
SELECT EMPNO, ENAME, SAL
FROM EMP
WHERE SAL > (SELECT MAX(SAL) FROM EMP WHERE DEPTNO = 30);

-- 7번 --
SELECT MAX(SAL+IFNULL(COMM,0)) '최고금액', MIN(SAL+IFNULL(COMM,0))'최저금액', AVG(SAL+IFNULL(COMM,0)) '평균 금액'
FROM EMP;
-- IFNULL(COMM,0) -> COMM이 NULL 이면 0으로 바꿔줌


-- 8번 --
SELECT B.DNAME, SUM(A.SAL) '합계'
FROM EMP A JOIN DEPT B
ON A.DEPTNO = B.DEPTNO
GROUP BY B.DNAME;

-- 9번 --
SELECT ENAME, JOB, SAL,
CASE
	WHEN SAL >= 3000 THEN SAL + (SAL * 0.15)
    WHEN SAL >= 2000 THEN SAL + (SAL * 0.1)
    WHEN SAL >= 1000 THEN SAL + (SAL * 0.05)
    ELSE SAL
END AS 격려금
FROM EMP;
-- IF-ELSE문과 같이 WHEN과 THEN을 사용해야함. 끝났을 때는 END를 사용해야함.

-- 10번 --
SELECT A.ENAME, A.JOB, A.SAL, B.DNAME, B.LOC
FROM EMP A JOIN DEPT B
ON A.DEPTNO = B.DEPTNO
WHERE A.JOB = (SELECT JOB FROM EMP WHERE ENAME = 'MARTIN');

-- 11번 --
SELECT A.ENAME, A.JOB, A.SAL, B.DNAME
FROM EMP A JOIN DEPT B
ON A.DEPTNO = B.DEPTNO
WHERE B.DNAME = 'RESEARCH';

-- 12번 -- ??????????????? 어려워잉 인라인뷰 사용

-- 부서명, 지역, 급여
SELECT B.DNAME, B.LOC, A.SAL
FROM EMP A JOIN DEPT B
ON A.DEPTNO = B.DEPTNO; 

-- 각 부서별 평균 급여
SELECT DEPTNO, AVG(SAL) '평균급여'
FROM EMP
GROUP BY DEPTNO;

-- 평균 급여가 가장 적은 부서
SELECT  MIN(SALAVG)
FROM (SELECT DEPTNO, AVG(SAL) AS SALAVG
FROM EMP
GROUP BY DEPTNO) AS AVGSAL;


-- 최종 --

SELECT B.DNAME, B.LOC, A.SAL
FROM EMP A JOIN DEPT B
ON A.DEPTNO = B.DEPTNO
WHERE SAL < (
				SELECT  MIN(SALAVG)
				FROM (SELECT DEPTNO, AVG(SAL) AS SALAVG
				FROM EMP
				GROUP BY DEPTNO) AS AVGSAL
			);


-- 13번 --
SELECT ENAME, HIREDATE
FROM EMP
WHERE DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME = 'BLAKE') 
AND ENAME NOT IN('BLAKE'); -- NOT IN 대신 <>를 사용하는 것이 더 좋음

-- 14번 -- ???????????????????

-- 이름에 'T'를 포함하고 있는 사원들 --
SELECT DEPTNO, ENAME
FROM EMP
WHERE ENAME LIKE "%T%";

-- 최종 --

SELECT EMPNO, ENAME
FROM EMP
WHERE DEPTNO IN (SELECT DEPTNO FROM EMP WHERE ENAME LIKE "%T%"); 

-- 15번 -- ??????????????

-- 평균 급여 --
SELECT AVG(SAL)
FROM EMP;

-- 이름에 'S'가 들어가는 사원 --
SELECT DEPTNO
FROM EMP
WHERE ENAME LIKE "%S%";

-- 최종 --

SELECT EMPNO, ENAME, SAL
FROM EMP
WHERE SAL > (SELECT AVG(SAL)
			 FROM EMP)
AND DEPTNO IN (SELECT DEPTNO
			   FROM EMP
			   WHERE ENAME LIKE "%S%");



-- 16번 -- ????????????????

-- 커미션을 받는 사원과 부서번호 --
SELECT DEPTNO
FROM EMP
WHERE COMM IS NOT NULL AND COMM != 0 ;

-- 부서가 같은 월급이 같은 사원 -- 
SELECT SAL
FROM EMP
WHERE COMM IS NOT NULL AND COMM != 0 ;

-- 최종 --
SELECT ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO IN (SELECT DEPTNO
FROM EMP
WHERE COMM IS NOT NULL AND COMM != 0)
AND
SAL IN (SELECT SAL
FROM EMP
WHERE COMM IS NOT NULL AND COMM != 0);


-- 17번 --
SELECT ENAME,
CASE 
WHEN JOB = 'PRESIDENT' THEN 'A'
WHEN JOB = 'ANALYST' THEN 'B'
WHEN JOB = 'MANAGER' THEN 'C'
WHEN JOB = 'SALESMAN' THEN 'D'
WHEN JOB = 'CLERK' THEN 'E'
END AS 등급
FROM EMP;

-- 18번 --

-- 10번 부서에 있는 직업 MANAGER, PRESIDENT, CLERK
SELECT JOB
FROM EMP 
WHERE DEPTNO = 10;
-- 30번 부서에 있는 직업 SALESMAN, MANAGER, CLERK
SELECT JOB
FROM EMP 
WHERE DEPTNO = 30;
-- PRESIDENT가 10번 부서 중에서 30번 부서에 없음


-- 최종 --
SELECT A.EMPNO, A.ENAME, B.DNAME, A.HIREDATE, B.LOC
FROM EMP A JOIN DEPT B
ON A.DEPTNO = B.DEPTNO
WHERE A.DEPTNO = 10 
AND 
JOB NOT IN (SELECT JOB
			FROM EMP 
			WHERE DEPTNO = 30);



-- 19번 --
-- 급여가 30번 부서의 최고 급여 --
SELECT MAX(SAL)
FROM EMP
WHERE DEPTNO = 30;

-- 최종 --
SELECT EMPNO, ENAME, SAL
FROM EMP
WHERE SAL > (SELECT MAX(SAL)
FROM EMP
WHERE DEPTNO = 30);

-- 20번 --
-- 급여가 30번 부서의 최저 급여보다 낮은 사원 --
SELECT MIN(SAL)
FROM EMP
WHERE DEPTNO = 30;

-- 최종 --
SELECT EMPNO, ENAME, SAL
FROM EMP
WHERE SAL < (SELECT MIN(SAL)
FROM EMP
WHERE DEPTNO = 30);

-- 21번 --
-- 입사일이 가장 빠른 사원 -- 
SELECT MIN(HIREDATE)
FROM EMP;

SELECT A.EMPNO, A.ENAME, A.HIREDATE, B.DNAME
FROM EMP A JOIN DEPT B
ON A.DEPTNO = B.DEPTNO
WHERE HIREDATE IN (SELECT MIN(HIREDATE)
FROM EMP);






 